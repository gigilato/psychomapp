// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EmailInput renders correctly 1`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      autoComplete="email"
      keyboardType="email-address"
      onBlur={[Function]}
      onFocus={[Function]}
      testID="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`EmailInput renders correctly with value 1`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      autoComplete="email"
      keyboardType="email-address"
      onBlur={[Function]}
      onFocus={[Function]}
      testID="test"
      value="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`PasswordInput renders correctly 1`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      autoComplete="password"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      secureTextEntry={true}
      testID="test"
      textContentType="password"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`PasswordInput renders correctly with value 1`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      autoComplete="password"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      secureTextEntry={true}
      testID="test"
      textContentType="password"
      value="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`PasswordInput shows password on icon press 1`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      autoComplete="password"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      secureTextEntry={false}
      testID="test"
      textContentType="password"
      value="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`PasswordInput shows password on icon press 2`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      autoComplete="password"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      secureTextEntry={true}
      testID="test"
      textContentType="password"
      value="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`TextInput renders correctly 1`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      testID="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text />
    </View>
  </View>
</View>
`;

exports[`TextInput renders correctly with value 1`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      testID="test"
      value="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`TextInput renders error correctly 1`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      testID="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
  <Text>
    error
  </Text>
</View>
`;

exports[`TextInput renders icon left correctly 1`] = `
<View>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/LeftIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
    <TextInput
      autoCapitalize="none"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      testID="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`TextInput renders icon left error correctly 1`] = `
<View>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/LeftIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
    <TextInput
      autoCapitalize="none"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      testID="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
  <Text>
    error
  </Text>
</View>
`;

exports[`TextInput renders icon right correctly 1`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      testID="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`TextInput renders icon right error correctly 1`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      testID="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
  <Text>
    error
  </Text>
</View>
`;

exports[`TextInput renders label correctly 1`] = `
<View>
  <Text>
    label
  </Text>
  <View>
    <TextInput
      autoCapitalize="none"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      testID="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`TextInput should clear text on icon right press 1`] = `
<View>
  <View>
    <TextInput
      autoCapitalize="none"
      keyboardType="default"
      onBlur={[Function]}
      onFocus={[Function]}
      testID="test"
      value="test"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={5}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": undefined,
          },
          undefined,
        ]
      }
      testID="test/RightIcon"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          {
            "color": undefined,
            "fontFamily": "IcoMoon",
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;
