// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="scale"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      [
        {
          "transform": [
            {
              "scale": undefined,
            },
          ],
        },
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceGrotesk-Bold",
        },
        {
          "fontSize": 16,
        },
        {
          "color": "#FFFFFF",
        },
      ]
    }
  >
    Title
  </Text>
</View>
`;

exports[`Button renders disabled correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="none"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      {
        "backgroundColor": "#E1DCDC",
      },
      {
        "borderBottomColor": "#E1DCDC",
        "borderLeftColor": "#E1DCDC",
        "borderRightColor": "#E1DCDC",
        "borderTopColor": "#E1DCDC",
      },
      {
        "borderBottomWidth": 2,
        "borderLeftWidth": 2,
        "borderRightWidth": 2,
        "borderTopWidth": 2,
      },
      [
        {},
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceGrotesk-Bold",
        },
        {
          "fontSize": 16,
        },
        {
          "color": "#505050",
        },
      ]
    }
  >
    Title
  </Text>
</View>
`;

exports[`Button renders error correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="scale"
  animationOpacity={0.2}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      {
        "backgroundColor": "#FFFFFF",
      },
      {
        "borderBottomColor": "#AE3232",
        "borderLeftColor": "#AE3232",
        "borderRightColor": "#AE3232",
        "borderTopColor": "#AE3232",
      },
      {
        "borderBottomWidth": 2,
        "borderLeftWidth": 2,
        "borderRightWidth": 2,
        "borderTopWidth": 2,
      },
      [
        {
          "transform": [
            {
              "scale": undefined,
            },
          ],
        },
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceGrotesk-Bold",
        },
        {
          "fontSize": 16,
        },
        {
          "color": "#AE3232",
        },
      ]
    }
  >
    Title
  </Text>
</View>
`;

exports[`Button renders icon left correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="scale"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      [
        {
          "transform": [
            {
              "scale": undefined,
            },
          ],
        },
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          {
            "color": "#FFFFFF",
          },
          {
            "marginRight": 8,
          },
        ],
        {
          "fontFamily": "IcoMoon",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceGrotesk-Bold",
        },
        {
          "fontSize": 16,
        },
        {
          "color": "#FFFFFF",
        },
      ]
    }
  >
    Title
  </Text>
</View>
`;

exports[`Button renders icon left disabled correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="none"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      {
        "backgroundColor": "#E1DCDC",
      },
      {
        "borderBottomColor": "#E1DCDC",
        "borderLeftColor": "#E1DCDC",
        "borderRightColor": "#E1DCDC",
        "borderTopColor": "#E1DCDC",
      },
      {
        "borderBottomWidth": 2,
        "borderLeftWidth": 2,
        "borderRightWidth": 2,
        "borderTopWidth": 2,
      },
      [
        {},
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          {
            "color": "#505050",
          },
          {
            "marginRight": 8,
          },
        ],
        {
          "fontFamily": "IcoMoon",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceGrotesk-Bold",
        },
        {
          "fontSize": 16,
        },
        {
          "color": "#505050",
        },
      ]
    }
  >
    Title
  </Text>
</View>
`;

exports[`Button renders icon left error correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="scale"
  animationOpacity={0.2}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      {
        "backgroundColor": "#FFFFFF",
      },
      {
        "borderBottomColor": "#AE3232",
        "borderLeftColor": "#AE3232",
        "borderRightColor": "#AE3232",
        "borderTopColor": "#AE3232",
      },
      {
        "borderBottomWidth": 2,
        "borderLeftWidth": 2,
        "borderRightWidth": 2,
        "borderTopWidth": 2,
      },
      [
        {
          "transform": [
            {
              "scale": undefined,
            },
          ],
        },
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          {
            "color": "#AE3232",
          },
          {
            "marginRight": 8,
          },
        ],
        {
          "fontFamily": "IcoMoon",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceGrotesk-Bold",
        },
        {
          "fontSize": 16,
        },
        {
          "color": "#AE3232",
        },
      ]
    }
  >
    Title
  </Text>
</View>
`;

exports[`Button renders icon right correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="scale"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      [
        {
          "transform": [
            {
              "scale": undefined,
            },
          ],
        },
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceGrotesk-Bold",
        },
        {
          "fontSize": 16,
        },
        {
          "color": "#FFFFFF",
        },
      ]
    }
  >
    Title
  </Text>
  <Text />
</View>
`;

exports[`Button renders icon right disabled correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="none"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      {
        "backgroundColor": "#E1DCDC",
      },
      {
        "borderBottomColor": "#E1DCDC",
        "borderLeftColor": "#E1DCDC",
        "borderRightColor": "#E1DCDC",
        "borderTopColor": "#E1DCDC",
      },
      {
        "borderBottomWidth": 2,
        "borderLeftWidth": 2,
        "borderRightWidth": 2,
        "borderTopWidth": 2,
      },
      [
        {},
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceGrotesk-Bold",
        },
        {
          "fontSize": 16,
        },
        {
          "color": "#505050",
        },
      ]
    }
  >
    Title
  </Text>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          {
            "color": "#505050",
          },
          {
            "marginLeft": 8,
          },
        ],
        {
          "fontFamily": "IcoMoon",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`Button renders icon right error correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="scale"
  animationOpacity={0.2}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      {
        "backgroundColor": "#FFFFFF",
      },
      {
        "borderBottomColor": "#AE3232",
        "borderLeftColor": "#AE3232",
        "borderRightColor": "#AE3232",
        "borderTopColor": "#AE3232",
      },
      {
        "borderBottomWidth": 2,
        "borderLeftWidth": 2,
        "borderRightWidth": 2,
        "borderTopWidth": 2,
      },
      [
        {
          "transform": [
            {
              "scale": undefined,
            },
          ],
        },
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceGrotesk-Bold",
        },
        {
          "fontSize": 16,
        },
        {
          "color": "#AE3232",
        },
      ]
    }
  >
    Title
  </Text>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          {
            "color": "#AE3232",
          },
          {
            "marginLeft": 8,
          },
        ],
        {
          "fontFamily": "IcoMoon",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`Button renders loading correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="scale"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      [
        {
          "transform": [
            {
              "scale": undefined,
            },
          ],
        },
        undefined,
      ],
    ]
  }
  testID=""
>
  <ActivityIndicator
    color="white"
  />
</View>
`;

exports[`IconButton renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="scale"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      {
        "width": 56,
      },
      [
        {
          "transform": [
            {
              "scale": undefined,
            },
          ],
        },
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          {
            "color": "#FFFFFF",
          },
        ],
        {
          "fontFamily": "IcoMoon",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`IconButton renders disabled correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="none"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      {
        "backgroundColor": "#E1DCDC",
      },
      {
        "borderBottomColor": "#E1DCDC",
        "borderLeftColor": "#E1DCDC",
        "borderRightColor": "#E1DCDC",
        "borderTopColor": "#E1DCDC",
      },
      {
        "borderBottomWidth": 2,
        "borderLeftWidth": 2,
        "borderRightWidth": 2,
        "borderTopWidth": 2,
      },
      {
        "width": 56,
      },
      [
        {},
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          {
            "color": "#505050",
          },
        ],
        {
          "fontFamily": "IcoMoon",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`IconButton renders error correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="scale"
  animationOpacity={0.2}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      {
        "backgroundColor": "#FFFFFF",
      },
      {
        "borderBottomColor": "#AE3232",
        "borderLeftColor": "#AE3232",
        "borderRightColor": "#AE3232",
        "borderTopColor": "#AE3232",
      },
      {
        "borderBottomWidth": 2,
        "borderLeftWidth": 2,
        "borderRightWidth": 2,
        "borderTopWidth": 2,
      },
      {
        "width": 56,
      },
      [
        {
          "transform": [
            {
              "scale": undefined,
            },
          ],
        },
        undefined,
      ],
    ]
  }
  testID=""
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          {
            "color": "#AE3232",
          },
        ],
        {
          "fontFamily": "IcoMoon",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`IconButton renders loading correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="scale"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "flexDirection": "row",
      },
      {
        "alignItems": "center",
      },
      {
        "justifyContent": "center",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      {
        "height": 44,
      },
      {
        "backgroundColor": "#FFB300",
      },
      {
        "width": 56,
      },
      [
        {
          "transform": [
            {
              "scale": undefined,
            },
          ],
        },
        undefined,
      ],
    ]
  }
  testID=""
>
  <ActivityIndicator
    color="white"
  />
</View>
`;

exports[`PressableIcon renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={5}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      [
        {
          "opacity": undefined,
        },
        undefined,
      ],
    ]
  }
  testID="test"
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          {
            "color": "#FFB300",
          },
        ],
        {
          "fontFamily": "IcoMoon",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`PressableText renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={5}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      [
        {
          "opacity": undefined,
        },
        undefined,
      ],
    ]
  }
  testID="test"
>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceGrotesk-Regular",
        },
        {
          "fontSize": 16,
        },
        {
          "lineHeight": 18,
        },
      ]
    }
  >
    text
  </Text>
</View>
`;
