// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pressable renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      [
        {
          "opacity": undefined,
        },
        undefined,
      ],
    ]
  }
  testID="test"
>
  <View
    style={
      {
        "height": 100,
        "width": 100,
      }
    }
  />
</View>
`;

exports[`Pressable renders with scale 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  animation="scale"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      [
        {
          "transform": [
            {
              "scale": undefined,
            },
          ],
        },
        undefined,
      ],
    ]
  }
  testID="test"
>
  <View
    style={
      {
        "height": 100,
        "width": 100,
      }
    }
  />
</View>
`;

exports[`Pressable renders with styles 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "paddingBottom": 12,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 12,
      },
      {
        "backgroundColor": "#FFD700",
      },
      {
        "borderBottomLeftRadius": 6,
        "borderBottomRightRadius": 6,
        "borderTopLeftRadius": 6,
        "borderTopRightRadius": 6,
      },
      [
        {
          "opacity": undefined,
        },
        undefined,
      ],
    ]
  }
  testID="test"
>
  <View
    style={
      {
        "height": 100,
        "width": 100,
      }
    }
  />
</View>
`;
