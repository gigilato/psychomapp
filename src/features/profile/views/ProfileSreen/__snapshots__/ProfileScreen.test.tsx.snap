// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfileScreen should renders correctly 1`] = `
[
  <RCTScrollView
    contentContainerStyle={
      [
        {
          "flexGrow": 1,
        },
        undefined,
      ]
    }
    onScroll={[Function]}
    scrollEnabled={true}
    scrollEventThrottle={16}
    style={
      [
        [
          {
            "transform": [
              {
                "translateY": 0,
              },
            ],
          },
          {
            "backgroundColor": "#FFFCF9",
          },
          undefined,
        ],
      ]
    }
  >
    <View>
      <View
        style={
          [
            {
              "backgroundColor": "#FFFCF9",
            },
            [
              undefined,
              {
                "height": 200,
                "width": 750,
              },
            ],
          ]
        }
      >
        <View
          style={
            {
              "height": 200,
              "width": 750,
            }
          }
        >
          <View
            color="#BB99DD"
            path={
              {
                "addCircle": [MockFunction],
                "close": [MockFunction] {
                  "calls": [
                    [],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "cubicTo": [MockFunction] {
                  "calls": [
                    [
                      187.5,
                      180,
                      375,
                      200,
                      750,
                      190,
                    ],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "lineTo": [MockFunction] {
                  "calls": [
                    [
                      0,
                      150,
                    ],
                    [
                      750,
                      0,
                    ],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "moveTo": [MockFunction] {
                  "calls": [
                    [
                      0,
                      0,
                    ],
                  ],
                  "results": [
                    {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              }
            }
            strokeWidth={2}
            style="fill"
          />
        </View>
        <View
          style={
            [
              {
                "alignItems": "center",
              },
              {
                "justifyContent": "center",
              },
              [
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                undefined,
              ],
            ]
          }
        >
          <Text
            style={
              [
                {
                  "fontFamily": "SpaceGrotesk-Bold",
                },
                {
                  "fontSize": 34,
                },
                {
                  "lineHeight": 42,
                },
                {
                  "color": "#FFFFFF",
                },
              ]
            }
          >
            firstname lastname
          </Text>
          <Text
            style={
              [
                {
                  "fontFamily": "SpaceGrotesk-Bold",
                },
                {
                  "fontSize": 20,
                },
                {
                  "lineHeight": 28,
                },
                {
                  "color": "#FFFFFF",
                },
              ]
            }
          >
            Profile.jobs.job
          </Text>
        </View>
      </View>
      <View
        style={
          [
            {
              "paddingLeft": 24,
              "paddingRight": 24,
            },
            [
              undefined,
              undefined,
            ],
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          animation="none"
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              {
                "alignItems": "center",
              },
              {
                "paddingBottom": 12,
                "paddingTop": 12,
              },
              [
                {},
                undefined,
              ],
            ]
          }
          testID="profile/email"
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#FFFACD",
                },
                {
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                },
                {
                  "marginRight": 12,
                },
                {
                  "borderBottomLeftRadius": 6,
                  "borderBottomRightRadius": 6,
                  "borderTopLeftRadius": 6,
                  "borderTopRightRadius": 6,
                },
                [
                  undefined,
                  {
                    "backgroundColor": "#f5f7fa",
                  },
                ],
              ]
            }
          >
            <Text />
          </View>
          <Text
            style={
              [
                {
                  "fontFamily": "SpaceGrotesk-Regular",
                },
                {
                  "fontSize": 16,
                },
                {
                  "lineHeight": 18,
                },
                {
                  "flexBasis": "0%",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            email@email.com
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          animation="opacity"
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              {
                "alignItems": "center",
              },
              {
                "paddingBottom": 12,
                "paddingTop": 12,
              },
              [
                {
                  "opacity": undefined,
                },
                undefined,
              ],
            ]
          }
          testID="profile/password"
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#FFFACD",
                },
                {
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                },
                {
                  "marginRight": 12,
                },
                {
                  "borderBottomLeftRadius": 6,
                  "borderBottomRightRadius": 6,
                  "borderTopLeftRadius": 6,
                  "borderTopRightRadius": 6,
                },
                [
                  undefined,
                  {
                    "backgroundColor": "#f5f7fa",
                  },
                ],
              ]
            }
          >
            <Text />
          </View>
          <Text
            style={
              [
                {
                  "fontFamily": "SpaceGrotesk-Regular",
                },
                {
                  "fontSize": 16,
                },
                {
                  "lineHeight": 18,
                },
                {
                  "flexBasis": "0%",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            Changer le mot de passe
          </Text>
          <Text />
        </View>
      </View>
      <View
        style={
          [
            {
              "backgroundColor": "#D3D3D3",
            },
            {
              "marginBottom": 24,
              "marginTop": 24,
            },
            [
              undefined,
              [
                {
                  "height": 0.5,
                },
                undefined,
              ],
            ],
          ]
        }
      />
      <View
        style={
          [
            {
              "paddingLeft": 24,
              "paddingRight": 24,
            },
            [
              undefined,
              undefined,
            ],
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          animation="opacity"
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              {
                "alignItems": "center",
              },
              {
                "paddingBottom": 12,
                "paddingTop": 12,
              },
              [
                {
                  "opacity": undefined,
                },
                undefined,
              ],
            ]
          }
          testID="profile/test"
        >
          <Text
            style={
              [
                {
                  "fontFamily": "SpaceGrotesk-Regular",
                },
                {
                  "fontSize": 16,
                },
                {
                  "lineHeight": 18,
                },
                {
                  "flexBasis": "0%",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            Mon classeur de tests
          </Text>
          <Text />
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          animation="opacity"
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              {
                "alignItems": "center",
              },
              {
                "paddingBottom": 12,
                "paddingTop": 12,
              },
              [
                {
                  "opacity": undefined,
                },
                undefined,
              ],
            ]
          }
          testID="profile/objectives"
        >
          <Text
            style={
              [
                {
                  "fontFamily": "SpaceGrotesk-Regular",
                },
                {
                  "fontSize": 16,
                },
                {
                  "lineHeight": 18,
                },
                {
                  "flexBasis": "0%",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            Mes objectifs
          </Text>
          <Text />
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          animation="opacity"
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              {
                "alignItems": "center",
              },
              {
                "paddingBottom": 12,
                "paddingTop": 12,
              },
              [
                {
                  "opacity": undefined,
                },
                undefined,
              ],
            ]
          }
          testID="profile/billing"
        >
          <Text
            style={
              [
                {
                  "fontFamily": "SpaceGrotesk-Regular",
                },
                {
                  "fontSize": 16,
                },
                {
                  "lineHeight": 18,
                },
                {
                  "flexBasis": "0%",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            Ma facturation
          </Text>
          <Text />
        </View>
      </View>
      <View
        style={
          [
            {
              "backgroundColor": "#D3D3D3",
            },
            {
              "marginBottom": 24,
              "marginTop": 24,
            },
            [
              undefined,
              [
                {
                  "height": 0.5,
                },
                undefined,
              ],
            ],
          ]
        }
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        animation="opacity"
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
            {
              "paddingBottom": 12,
              "paddingTop": 12,
            },
            {
              "paddingLeft": 24,
              "paddingRight": 24,
            },
            [
              {
                "opacity": undefined,
              },
              undefined,
            ],
          ]
        }
        testID="profile/signOut"
      >
        <Text
          style={
            [
              {
                "fontFamily": "SpaceGrotesk-Regular",
              },
              {
                "fontSize": 16,
              },
              {
                "lineHeight": 18,
              },
              {
                "flexBasis": "0%",
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          Conditions générales d'utilisation
        </Text>
        <Text />
      </View>
      <View
        style={
          [
            {
              "backgroundColor": "#D3D3D3",
            },
            {
              "marginBottom": 24,
              "marginTop": 24,
            },
            [
              undefined,
              [
                {
                  "height": 0.5,
                },
                undefined,
              ],
            ],
          ]
        }
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        animation="none"
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
            {
              "paddingBottom": 12,
              "paddingTop": 12,
            },
            {
              "paddingLeft": 24,
              "paddingRight": 24,
            },
            [
              {},
              undefined,
            ],
          ]
        }
        testID="profile/signOut"
      >
        <View
          style={
            [
              {
                "backgroundColor": "#FFFACD",
              },
              {
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              },
              {
                "marginRight": 12,
              },
              {
                "borderBottomLeftRadius": 6,
                "borderBottomRightRadius": 6,
                "borderTopLeftRadius": 6,
                "borderTopRightRadius": 6,
              },
              [
                undefined,
                {
                  "backgroundColor": "#F4E9E9",
                },
              ],
            ]
          }
        >
          <Text />
        </View>
        <Text
          style={
            [
              {
                "fontFamily": "SpaceGrotesk-Regular",
              },
              {
                "fontSize": 16,
              },
              {
                "lineHeight": 18,
              },
              {
                "flexBasis": "0%",
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          Déconnexion
        </Text>
      </View>
      <View
        style={
          [
            {
              "height": 120,
            },
            [
              undefined,
              undefined,
            ],
          ]
        }
      />
      <View
        onLayout={[Function]}
        style={
          [
            [
              undefined,
              undefined,
            ],
          ]
        }
      >
        <View
          style={
            [
              {
                "paddingLeft": 24,
                "paddingRight": 24,
              },
              {
                "paddingBottom": 16,
                "paddingTop": 16,
              },
              [
                undefined,
                undefined,
              ],
            ]
          }
        >
          <Text
            style={
              [
                {
                  "fontFamily": "SpaceGrotesk-Bold",
                },
                {
                  "fontSize": 20,
                },
                {
                  "lineHeight": 28,
                },
                {
                  "textAlign": "center",
                },
              ]
            }
          >
            Mes objectifs
          </Text>
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "marginBottom": 24,
                  "marginTop": 24,
                },
                [
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                [
                  {
                    "height": 12,
                  },
                  {
                    "width": 30,
                  },
                  [
                    undefined,
                    undefined,
                  ],
                ]
              }
            />
            <View
              style={
                [
                  {
                    "width": 4,
                  },
                  [
                    undefined,
                    undefined,
                  ],
                ]
              }
            />
            <View
              style={
                [
                  {
                    "height": 12,
                  },
                  {
                    "width": 50,
                  },
                  [
                    undefined,
                    undefined,
                  ],
                ]
              }
            />
            <View
              style={
                [
                  {
                    "width": 4,
                  },
                  [
                    undefined,
                    undefined,
                  ],
                ]
              }
            />
            <View
              style={
                [
                  {
                    "height": 12,
                  },
                  {
                    "width": 40,
                  },
                  [
                    undefined,
                    undefined,
                  ],
                ]
              }
            />
          </View>
          <View
            style={
              [
                {
                  "justifyContent": "center",
                },
                {
                  "alignItems": "center",
                },
                [
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              hitSlop={5}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  [
                    {
                      "opacity": undefined,
                    },
                    undefined,
                  ],
                ]
              }
              testID="objectives/create"
            >
              <Text
                style={
                  [
                    {
                      "fontFamily": "SpaceGrotesk-Medium",
                    },
                    {
                      "fontSize": 14,
                    },
                    {
                      "color": "#505050",
                    },
                    {
                      "textDecorationLine": "underline",
                    },
                  ]
                }
              >
                Créer un objectif
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>,
  <View
    style={
      [
        {
          "position": "absolute",
        },
        {
          "top": 0,
        },
        {
          "left": 0,
        },
        {
          "right": 0,
        },
        {
          "backgroundColor": "#BB99DD",
        },
        [
          undefined,
          {
            "height": 0,
          },
        ],
      ]
    }
  />,
]
`;
